{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"testproject \u00b6 asdf Description \u00b6 Documentation still to be done. Downloads \u00b6 Binaries \u00b6 Linux Windows Mac OS X Development \u00b6 Requirements \u00b6 Python (version >=3.6) pip, virtualenv git make direnv (optional) Prepare development environment \u00b6 Notes: if using direnv , adjust the Python version in .envrc (should not be necessary) if not using direnv , you have to setup and activate your Python virtualenv yourself, manually, before running make init git clone https://gitlab.com/frkl/testproject cd testproject mv .envrc.disabled .envrc direnv allow # if using direnv, otherwise activate virtualenv make init make targets \u00b6 init : init development project (install project & dev dependencies into virtualenv, as well as pre-commit git hook) binary : create binary for project (will install pyenv -- check scripts/build-binary for details) flake : run flake8 tests mypy : run mypy tests test : run unit tests docs : create static documentation pages serve-docs : serve documentation pages (incl. auto-reload) clean : clean build directories For details (and other, minor targets), check the Makefile . Running tests \u00b6 > make test # or > make coverage Update project template \u00b6 This project uses cruft to apply updates to the base Python project template to this repository. Check out it's documentation for more information. cruft update # interactively approve changes, make changes if necessary git add * git commit -m \"chore: updated project from template\" Copyright & license \u00b6 Please check the LICENSE file in this repository (it's a short license!). Parity Public License 6.0.0 Copyright (c) 2020 frkl O\u00dc","title":"Home"},{"location":"#testproject","text":"asdf","title":"testproject"},{"location":"#description","text":"Documentation still to be done.","title":"Description"},{"location":"#downloads","text":"","title":"Downloads"},{"location":"#binaries","text":"Linux Windows Mac OS X","title":"Binaries"},{"location":"#development","text":"","title":"Development"},{"location":"#requirements","text":"Python (version >=3.6) pip, virtualenv git make direnv (optional)","title":"Requirements"},{"location":"#prepare-development-environment","text":"Notes: if using direnv , adjust the Python version in .envrc (should not be necessary) if not using direnv , you have to setup and activate your Python virtualenv yourself, manually, before running make init git clone https://gitlab.com/frkl/testproject cd testproject mv .envrc.disabled .envrc direnv allow # if using direnv, otherwise activate virtualenv make init","title":"Prepare development environment"},{"location":"#make-targets","text":"init : init development project (install project & dev dependencies into virtualenv, as well as pre-commit git hook) binary : create binary for project (will install pyenv -- check scripts/build-binary for details) flake : run flake8 tests mypy : run mypy tests test : run unit tests docs : create static documentation pages serve-docs : serve documentation pages (incl. auto-reload) clean : clean build directories For details (and other, minor targets), check the Makefile .","title":"make targets"},{"location":"#running-tests","text":"> make test # or > make coverage","title":"Running tests"},{"location":"#update-project-template","text":"This project uses cruft to apply updates to the base Python project template to this repository. Check out it's documentation for more information. cruft update # interactively approve changes, make changes if necessary git add * git commit -m \"chore: updated project from template\"","title":"Update project template"},{"location":"#copyright-license","text":"Please check the LICENSE file in this repository (it's a short license!). Parity Public License 6.0.0 Copyright (c) 2020 frkl O\u00dc","title":"Copyright &amp; license"},{"location":"api-documentation/","text":"testproject \u00b6 log \u00b6 Top-level package for testproject. testproject.interfaces \u00b6 testproject.interfaces.cli \u00b6 testproject._meta \u00b6 testproject.defaults \u00b6 testproject.testproject \u00b6 Main module.","title":"API Documentation"},{"location":"api-documentation/#testproject","text":"","title":"testproject"},{"location":"api-documentation/#log","text":"Top-level package for testproject.","title":"log"},{"location":"api-documentation/#testprojectinterfaces","text":"","title":"testproject.interfaces"},{"location":"api-documentation/#testprojectinterfacescli","text":"","title":"testproject.interfaces.cli"},{"location":"api-documentation/#testproject_meta","text":"","title":"testproject._meta"},{"location":"api-documentation/#testprojectdefaults","text":"","title":"testproject.defaults"},{"location":"api-documentation/#testprojecttestproject","text":"Main module.","title":"testproject.testproject"},{"location":"install/","text":"Installation \u00b6 There are three ways to install testproject on your machine. Via a manual binary download, an install script, or installation of the python package. Binaries \u00b6 To install testproject , download the appropriate binary from one of the links below, and set the downloaded file to be executable ( chmod +x testproject ): Linux Windows Mac OS X Install script \u00b6 Alternatively, use the 'curly' install script for testproject : curl https://gitlab.com/frkl/testproject/-/raw/develop/scripts/install/testproject.sh | bash This will add a section to your shell init file to add the install location ( $HOME/.local/share/frkl/bin ) to your $PATH . You might need to source that file (or log out and re-log in to your session) in order to be able to use testproject : source ~/.profile Python package \u00b6 The python package is currently not available on pypi , so you need to specify the --extra-url parameter for your pip command. If you chooose this install method, I assume you know how to install Python packages manually, which is why I only show you an example way of getting testproject onto your machine: > python3 -m venv ~/.venvs/testproject > source ~/.venvs/testproject/bin/activate > pip install --extra-index-url https://pkgs.frkl.io/frkl/dev testproject Looking in indexes: https://pypi.org/simple, https://pkgs.frkl.io/frkl/dev Collecting testproject Downloading http://pkgs.frkl.io/frkl/dev/%2Bf/ee3/f57bd91a076f9/testproject-0.1.dev24%2Bgd3c4447-py2.py3-none-any.whl (28 kB) ... ... ... Successfully installed aiokafka-0.6.0 aiopg-1.0.0 ... ... ... > testproject --help Usage: testproject [OPTIONS] COMMAND [ARGS]... ... ...","title":"Install"},{"location":"install/#installation","text":"There are three ways to install testproject on your machine. Via a manual binary download, an install script, or installation of the python package.","title":"Installation"},{"location":"install/#binaries","text":"To install testproject , download the appropriate binary from one of the links below, and set the downloaded file to be executable ( chmod +x testproject ): Linux Windows Mac OS X","title":"Binaries"},{"location":"install/#install-script","text":"Alternatively, use the 'curly' install script for testproject : curl https://gitlab.com/frkl/testproject/-/raw/develop/scripts/install/testproject.sh | bash This will add a section to your shell init file to add the install location ( $HOME/.local/share/frkl/bin ) to your $PATH . You might need to source that file (or log out and re-log in to your session) in order to be able to use testproject : source ~/.profile","title":"Install script"},{"location":"install/#python-package","text":"The python package is currently not available on pypi , so you need to specify the --extra-url parameter for your pip command. If you chooose this install method, I assume you know how to install Python packages manually, which is why I only show you an example way of getting testproject onto your machine: > python3 -m venv ~/.venvs/testproject > source ~/.venvs/testproject/bin/activate > pip install --extra-index-url https://pkgs.frkl.io/frkl/dev testproject Looking in indexes: https://pypi.org/simple, https://pkgs.frkl.io/frkl/dev Collecting testproject Downloading http://pkgs.frkl.io/frkl/dev/%2Bf/ee3/f57bd91a076f9/testproject-0.1.dev24%2Bgd3c4447-py2.py3-none-any.whl (28 kB) ... ... ... Successfully installed aiokafka-0.6.0 aiopg-1.0.0 ... ... ... > testproject --help Usage: testproject [OPTIONS] COMMAND [ARGS]... ... ...","title":"Python package"},{"location":"usage/","text":"Usage \u00b6 Getting help \u00b6 To get information for the testproject command, use the --help flag: > testproject --help Usage: testproject [OPTIONS] Options: --help Show this message and exit.","title":"Usage"},{"location":"usage/#usage","text":"","title":"Usage"},{"location":"usage/#getting-help","text":"To get information for the testproject command, use the --help flag: > testproject --help Usage: testproject [OPTIONS] Options: --help Show this message and exit.","title":"Getting help"}]}